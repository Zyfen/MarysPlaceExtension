KidzCoding Hour of Code - Dodging Game

Activity: 
In this activity, students will learn how to make a simple and fun dodging  game in Scratch. This activity makes use of conditional statements, variables, and loops. In the game, there will be lasers that fall from the ceiling and the player will have to dodge them. A score variable will keep track of how many lasers that player is able to dodge.


Learning Objectives: 
Learn how to use keyboard inputs to control characters
Utilize variables to keep track of in-game information
Develop a strong understanding of loops 
Materials: 
Scratch Starter Project: 
Finished Game: 
Coding Time!

Starting the project
Open the Scratch starter project, and you will have all of the included sprites and costumes. 

Variables

You will need one variable for this project called score. This variable will keep track of how many lasers you dodged.

Coding the Player

1. Placing the Player

When the game starts, you want the player to start at the bottom middle of the screen. The x-coordinate of 0 will but it in the middle, and the y-coordinate of -144 will put it at the bottom.

2. Movement of the Player

This step involves a forever loop and some if statements. The forever loop makes the game and the player run forever. Without the loop, the game wouldn’t run because it would only move once. The if statements check to see if the user is pressing the arrow keys, and if the keys are being pressed, then the “change x” blocks will move the player in the right direction.

Coding the Laser

1. Setting the Background

At the start of the game, we need to set the background to backdrop1 so that we have a blank background. Backdrop2 will be used to show that the game is over.

2. Setting Score
 
At the start of the game, we need to set the score to 0.

3. Starting Position

In our game, the lasers are going to come from random places at the top of the screen. To do this, we will go to the y-coordinate of the laser to 166, which is near the top of the screen. To get a random starting position at the top, we will then go to an x-coordinate between -250 and 250 using the “pick random” operator, because -250 and 250 are the left and right edges of the screen.

Remember: x is the side to side position and y is the up and down position

4. Moving the Laser

To move the laser down towards the player, we will use a forever loop. This loop will change the y-position of the player down by 10 forever. This means that the laser will go down forever.

5. Resetting the Laser

In the last step, we used a forever loop to move the laser downwards forever. However, we don’t want it to actually fall downwards forever - we want it to go back to the top when it hits the bottom of the screen. To do this, we will use an if statement inside of the loop. This if statement checks if the laser is touching the edge (bottom) of the screen. If it does, it will first change the score by 1, because if it touches the bottom of the screen, that means that the player successfully dodged it. Then, we will make the laser go to a random place at the top of the screen again.

6. Making More Lasers

Right now, our game only has one laser. Dodging one laser is pretty easy, so we can make the game harder by adding more lasers. To do this, right click on the laser, then press duplicate. Do this as many times as you want, but just know that the game will become more and more harder.

Ending the Game

1. Detecting a Hit

Go back to the player sprite. We will use an if statement inside the forever loop to check if the laser ever hits the player. If the player is touching the laser, then the game should end. To end the game, we will first switch the backdrop to backdrop2, which will show “game over.” Then, use the stop all block to end the program. 


Congratulations, you have just completed an Hour of Code!


Complete Code:

Player:


Laser:
